// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3930.PowerUp2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.drive.RobotDriveBase;
import edu.wpi.first.wpilibj.drive.RobotDriveBase.MotorType;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SendableBuilder;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	//Drive Base
    public static WPI_TalonSRX driveBasefrontLeft;
    public static WPI_TalonSRX driveBasebackLeft;
    public static WPI_TalonSRX driveBasefrontRight;
    public static WPI_TalonSRX driveBasebackRight;
    public static DifferentialDrive driveBaseRobotDrive;
    
    //Arm
    public static SpeedController armarmMotor;
    public static DigitalInput armlowLimit;
    public static DigitalInput armhighLimit;
    public static DigitalInput armmediumHall;
    
    //Gripper
    public static SpeedController grippergripperMotor;
    
    //Pneumatics
    public static DoubleSolenoid pneumaticsleftPiston;
    public static DoubleSolenoid pneumaticsrightPiston;
    public static Compressor pneumaticsCompressor;
    
    //Ramp
    public static SpeedController ramprampMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	
    	//Drive Base
        driveBasefrontLeft = new WPI_TalonSRX(0);
        driveBasefrontLeft.setInverted(false);
        driveBasebackLeft = new WPI_TalonSRX(2);
        driveBasebackLeft.setInverted(false);
        driveBasefrontRight = new WPI_TalonSRX(1);
        driveBasefrontRight.setInverted(false);
        driveBasebackRight = new WPI_TalonSRX(3);
        driveBasebackRight.setInverted(false);
        
        SpeedControllerGroup leftSide = new SpeedControllerGroup(driveBasebackLeft, driveBasefrontLeft);
        SpeedControllerGroup rightSide = new SpeedControllerGroup(driveBasebackRight, driveBasefrontRight);
        
        
        driveBaseRobotDrive = new DifferentialDrive(leftSide, rightSide);
        
        driveBaseRobotDrive.setSafetyEnabled(true);
        driveBaseRobotDrive.setExpiration(0.1);
        driveBaseRobotDrive.setMaxOutput(0.6);
        
        //Arm
        armarmMotor = new PWMVictorSPX(4);
        armarmMotor.setInverted(false);
        armlowLimit = new DigitalInput(0);
        armhighLimit = new DigitalInput(1);
        armmediumHall = new DigitalInput(2);
        
        //Gripper
        grippergripperMotor = new PWMVictorSPX(5);
        grippergripperMotor.setInverted(false);
        
        //Pneumatics
        pneumaticsleftPiston = new DoubleSolenoid(0, 0, 1);
        pneumaticsrightPiston = new DoubleSolenoid(0, 2, 3);
        pneumaticsCompressor = new Compressor(0);
        
        //Ramp
        ramprampMotor = new PWMVictorSPX(6);
        ramprampMotor.setInverted(false);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
